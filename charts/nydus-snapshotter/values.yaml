# nydus-snapshotter Helm Chart Values
#
global:
  # -- Global Docker image registry.
  imageRegistry: ""
  # -- Global Docker registry secret names as an array.
  imagePullSecrets: []
  # -- Global node labels for pod assignment.
  nodeSelector: {}

# -- Log level for nydus-snapshotter, and nydus
logLevel: "info"

# -- nydus-snapshotter name
name: nydus-snapshotter
image:
  # -- Image registry.
  registry: ghcr.io
  # -- Image repository.
  repository: containerd/nydus-snapshotter
  # -- Image tag.
  tag: v0.9.0
  # -- Image pull policy.
  pullPolicy: Always
  # -- Image pull secrets.
  # @default -- `[]` (defaults to global.imagePullSecrets).
  pullSecrets: []
# -- Let nydus-snapshotter run in host network
hostNetwork: true
# -- Let nydus-snapshotter use the host's pid namespace
hostPid: true
# -- Host Aliases
hostAliases: []
# -- Args to overwrite default nydus-snapshotter startup command
args: []
# -- Pod resource requests and limits
resources:
  requests:
    cpu: "0"
    memory: "0"
  limits:
    cpu: "2"
    memory: "2Gi"
# -- Pod priorityClassName
priorityClassName: ""
# -- Node labels for pod assignment
nodeSelector: {}
# -- Pod terminationGracePeriodSeconds
terminationGracePeriodSeconds:
# -- List of node taints to tolerate
tolerations: []
# -- Pod annotations
podAnnotations: {}
# -- Pod labels
podLabels: {}
# -- Daemonset annotations
daemonsetAnnotations: {}

dragonfly:
  # -- Enable dragonfly
  enable: true
  mirrorConfig:
  - host: "http://127.0.0.1:4001"
    auth_through: false
    headers:
      "X-Dragonfly-Registry": "https://index.docker.io"
    ping_url: "http://127.0.0.1:4003/healthy"

# Service Account settings
serviceAccount:
  create: true
  annotations: {}
  automount: true

# Cluster role and bindings
clusterrole:
  create: true

# Init container settings
init:
  containerd:
    restartTimeout: 60

# -- [Experimental] Container runtime support
# Choose special container runtime in Kubernetes.
# Support: Containerd, Docker, CRI-O
containerRuntime:
  initContainer:
    image:
      # -- Image registry.
      registry: ghcr.io
      # -- Image repository.
      repository: liubin/toml-cli
      # -- Image tag.
      tag: v0.0.7
      # -- Image pull policy.
      pullPolicy: Always

  # -- [Experimental] Containerd support
  containerd:
    # -- Enable containerd support
    # Inject nydus-snapshotter config into ${containerRuntime.containerd.configFile},
    enable: true
    # -- Custom config path directory, default is /etc/containerd/config.toml
    configFile: "/etc/containerd/config.toml"
    # If provided, the containerd runtime handler name Nydus will be configured for. Preserving the default
    runtimeHandlerName: ""

# nydusd configuration
nydusd:
  backend:
    type: "registry"
    config: {}
  cache:
    type: "blobcache"
    config:
      work_dir: "/data/nydus/cache"
  # direct | cached
  mode: "direct"